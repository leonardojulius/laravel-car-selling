/* Route::get('about', function () {
    return view('about');
});

Route::get('/product/{id}', function (string $id) {

    return "Product ID=$id";
});
 */
Route::view('/about','about');


/* Route::view('/contact','contact',['phone'=>'4353535']);
 */

/* Route::get('/product/{id}',function(string $id){
    return "Product ID=$id";
});


Route::get('/product/{id}',function(string $id)
{
    return "Works! $id";
})->whereNumber('id');
 */

 Route::get('/user/{username}',function(string $username){

 })->where('username','[a-z]+');

 Route::get("{lang}/product/{id}",function(string $lang, string $id){


 })->where(['lang'=>'[a-z]{2}','id'=> '\d{4,}']);

 Route::get('/search/{search}',function(string $search){

    return $search;
 })->where('search','.+');



<!-----Name Routes------>

Route::get('/', function () {

  //  $aboutPageUrl  =  '/about';
  $aboutPageUrl = route('about');
  dd($aboutPageUrl);
    return view('welcome');
});

Route::view('/about-us', 'about')->name('about');

<!----End Name Routes----->

<!----Routes Optional Parameters---->

Route::get('/product/{category?}',function(string $category = null) {

    return "Product for category=$category";
});


<!----End Routes Optional Parameters----->

<!----End Name Routes----->


<!----Routes with Parameters---->

/* Route::get("/p/{lang}/{id}",function(string $lang, string $id){
})->name("product.view"); */

Route::get('/user/profile',function(){})->name('profile');

Route::get('/current-user',function(){
  //  return redirect()->route('profile');
    return to_route('profile');
});

<!----End Name Routes with Parameters----->



<!----Route Groups----->
Route::prefix('admin')->group(function () {
      Route::get('/users',function(){
        echo '/admin/users';
      });
});

Route::name('admin.')->group(function () {
    Route::get('/users',function(){
        return '/users';
    });
});


<!----End Route Groups----->


<!----Fallback Routes----->

Route::fallback(function () {
    return 'Fallback';
});

<!----End Fallback Routes---->

<!----View Registered Routes with Artisan----->

php artisan route:list

php artisan route:list -v //Middleware

php artisan route:list --except-vendor //exclude vendor

php artisan route:list --only-vendor // vendor only

php artisan route:list -v --except-vendor --path=admin

php artisan route:cache

php artisan route:clear

<!----End View Registered Routes with Artisan----->


<!---Challenge--->

Route::get('/sum/{a}/{b}',function(float $a, float $b) {
    return $a + $b;
})->whereNumber(['a','b']);

<!---End Challenge--->


<!---basic controllers--->

php artisan make:controller CarController // Located at app/Http/Controllers/CarController.php

@web.php
Route::get('/car',[CarController::class,'index']);

<!---End basic controllers--->


Time 1:17
<!---Group Routes by Controller--->

@web.php
    Route::controller(CarController::class)->group(function(){
    Route::get('/car', 'index');
    Route::get('my-cars','myCars');
});

<!---End Routes by Controller--->

<!---Single Action Controller--->
php artisan make:controller ShowCarController --invokable

Route::get('/car/invokable',CarController::class);
Route::get('/car',[CarController::class,'index']);


  public function __invoke() {
        return '__invoke';

    }

<!---End Single Action Controller--->


//Time 1:22:52
<!---Resource Controller--->
php artisan make:controller ProductController --resource

php artisan route:list

Route::resource('/products', ProductController::class)->except(['destroy']); //exclude
Route::resource('/products', ProductController::class)->only(['index','show']);

Route::apiResource('/products', ProductController::class);//For Api Resource

php artisan make:controller CarController --api //Exclude Create and Edit after generating.

//Grouping
Route::apiResources([
    'cars' => CarController::class,
    'products' => ProductController::class,
]);

<!---End Resource Controller--->

1:30:50
Challenge

<!---Challenge--->

    @web.php  //

    Route::controller(OperationController::class)->group(function(){
        Route::get('/sum/{a}/{b}','sum')->whereNumber(['a','b']);
        Route::get('/subtract/{a}/{b}','sub')->whereNumber(['a','b']);
    });


    @OperationController //

       public function sum(float $a, float $b) {

            return  $a + $b;

        }
        public function sub($a,$b) {
            return $a - $b;
        }

<!---End Challenge--->


1:34:06

Create HomeController
php artisan make:controller HomeController

1:36:55

Create and Render Views

Views are files, that are responsible
for presentation logic
in your Laravel applications
and are stored
under resources/views folder

Blade is Laravel's templating engine
that helps you to build HTML views
efficiently.
It allows mixing HTML with PHP using simple and clean syntax.

BLADE CORE FEATURES
>Template Inheritance
>Directives
>Components & slots

php artisan make:view index

php artisan make:view home.index

1:40:22

<!---Render View using View Facade--->
 if(!View::exists('index')){
            dump("View does not exist");
        }

        return View::make("home.index");

<!---End Render View using View Facade--->


1:42:49

<!---Pass Data to Views--->

 public function index(){

//Method 1
        return view('home.index',[
            'name'=>'Julius',
            'surname'=>'Leonardo'
        ]);
    }

//Method 2

   public function index(){
      return view('home.index')
      ->with('name','Julius')
      ->with('surname','Leonardo');
    }

<!---End Pass Data to Views--->


1:45:07

<!---Share Data Between all Views--->

 @app\Providers\AppServiceProvider.php
 use Illuminate\Support\Facades\View;

 public function boot(): void
    {
        //
        View::share('year', date('Y'));
    }

@resources\views\home\index.blade.php

<p>Year: {{$year}}</p>

<!---End Share Data Between all Views--->

1:46:14

<!---Challenge--->

php artisan make:controller HelloController

php artisan make:view hello.welcome

@routes\web.php

Route::get('/hello',[HelloController::class,'welcome'])->name('hello');

@app\Http\Controllers\HelloController.php
 public function welcome(){

        return view('hello.welcome')
        ->with('name','julius')
        ->with('surname','leonardo');

    }

  @resources\views\hello\welcome.blade.php

  <h1>Welcome to Hello Blade</h1>
  <p>My  name is {{$name}} {{$surname}}</p>

<!---End Challenge--->

1:49:48

<!--- Using Functions in Blade Files --->

@resources\views\home\index.blade.php

{{date('Y')}}
<p>{{strtoupper($name . ' ' . $surname)}}</p>
<p>{{Illuminate\Support\Str::after("Hello World","Hello ")}}</p>
<p>{{Illuminate\Foundation\Application::VERSION}}</p>
<p>{{PHP_VERSION}}</p>


<!--- End Using Functions in Blade Files --->

1:51:32

<!---Display Unescaped Data--->

@app\Http\Controllers\HomeController.php
   public function index(){
      return view('home.index')
      ->with('name','Julius')
      ->with('surname','Leonardo')
      ->with('job','<b>Developer</b>');
    }
@resources\views\home\index.blade.php
    {!! $job !!}
<!---End Display Unescaped Data--->

1:52:55

<!--- Blade and Javascript Frameworks --->


<!--- End Blade and Javascript Frameworks --->
